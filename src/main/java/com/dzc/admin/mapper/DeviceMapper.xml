<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dzc.admin.dao.DeviceMapper">
    <resultMap id="BaseResultMap" type="com.dzc.admin.model.Device">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="device_name" jdbcType="VARCHAR" property="deviceName"/>
        <result column="device_room_id" jdbcType="INTEGER" property="deviceRoomId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, device_name, device_room_id, status,ip
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_device
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_device
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.dzc.admin.model.Device">
    insert into t_device (id, device_name, device_room_id, ip,
      status)
    values (#{id,jdbcType=INTEGER}, #{deviceName,jdbcType=VARCHAR}, #{deviceRoomId,jdbcType=INTEGER}, #{ip,jdbcType=VARCHAR},
      #{status,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.dzc.admin.model.Device">
        insert into t_device
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="deviceName != null">
                device_name,
            </if>
            <if test="deviceRoomId != null">
                device_room_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="ip != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="deviceName != null">
                #{deviceName,jdbcType=VARCHAR},
            </if>
            <if test="deviceRoomId != null">
                #{deviceRoomId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dzc.admin.model.Device">
        update t_device
        <set>
            <if test="deviceName != null">
                device_name = #{deviceName,jdbcType=VARCHAR},
            </if>
            <if test="deviceRoomId != null">
                device_room_id = #{deviceRoomId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="ip != null">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dzc.admin.model.Device">
    update t_device
    set device_name = #{deviceName,jdbcType=VARCHAR},
      device_room_id = #{deviceRoomId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectAllDevices" resultType="com.dzc.admin.vo.DeviceVo">
    SELECT
	r.id as id,
	r.device_name as DeviceName,
	r.room_name as roomName,
	b.building_name as BuildingName,
	r.STATUS as status,
	r.ip as ip
    FROM
	( SELECT d.id , d.ip as ip, device_name, room_name,STATUS, buidling_id FROM `t_device` d JOIN t_room r ON d.device_room_id = r.id ) AS r
	JOIN t_building b ON r.buidling_id = b.id
    </select>

    <select id="getAllIp" resultType="java.lang.String">
        select distinct ip
        from t_device
    </select>

    <delete id="deleteByListId">
        delete from t_device
        where id in
        <foreach collection="list" open="(" close=")"
                 separator="," item="deviceId">
            #{deviceId}
        </foreach>
    </delete>

    <insert id="insertDevices">
        insert into t_device
        (device_name, device_room_id, status)
        values
        <foreach collection="list" item="item" separator=",">
            ( #{item.deviceName},#{item.deviceRoomId},#{item.status} )
        </foreach>
    </insert>
</mapper>